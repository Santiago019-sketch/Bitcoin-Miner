-- Cleanup existing GUI
if game:GetService("CoreGui"):FindFirstChild("OrionLib") then
    game:GetService("CoreGui"):FindFirstChild("OrionLib"):Destroy()
end

-- Services
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local RS = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local VirtualUser = game:GetService('VirtualUser')
local TweenService = game:GetService("TweenService")

-- Config
local Config = {
    AutoCollectEnabled = false,
    CollectDelay = 0.1,
    ExchangeDelay = 0.1,
    AutoCrystalTP = false,
    TeleportSpeed = 15
}

-- Known codes
local codes = {
    "Release",
    "500Likes",
    "1kLikes",
    "2kLikes",
    "3kLikes",
    "4kLikes",
    "5kLikes",
    "Update1",
    "NewYear2024",
}

-- Create Window
local Window = OrionLib:MakeWindow({
    Name = "Crypto Miner Ultimate",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CryptoMinerConfig"
})

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MainSection = MainTab:AddSection({
    Name = "Main Features"
})

-- Codes Tab
local CodesTab = Window:MakeTab({
    Name = "Codes",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local CodesSection = CodesTab:AddSection({
    Name = "Redeem Codes"
})

-- Function to redeem a code
local function redeemCode(code)
    if RS:FindFirstChild("Events") and RS.Events:FindFirstChild("RedeemCode") then
        RS.Events.RedeemCode:FireServer(code)
    end
    
    -- Try alternative remote paths
    if RS:FindFirstChild("Remotes") and RS.Remotes:FindFirstChild("RedeemCode") then
        RS.Remotes.RedeemCode:FireServer(code)
    end
    
    task.wait(0.5)
end

-- Add button to redeem all codes
CodesSection:AddButton({
    Name = "Redeem All Codes",
    Callback = function()
        for _, code in ipairs(codes) do
            redeemCode(code)
        end
        OrionLib:MakeNotification({
            Name = "Codes",
            Content = "Attempted to redeem all codes!",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

-- Crystal Tab
local CrystalTab = Window:MakeTab({
    Name = "Crystals",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local CrystalSection = CrystalTab:AddSection({
    Name = "Crystal Collection"
})

-- Function to find nearest crystal
local function findNearestCrystal()
    local nearestCrystal = nil
    local minDistance = math.huge
    
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and (
            v.Name:lower():match("crystal") or 
            v.Name:lower():match("gem") or 
            v.Name:lower():match("red") or 
            v.Name:lower():match("green") or 
            v.Name:lower():match("blue")
        ) then
            local distance = (LP.Character.HumanoidRootPart.Position - v.Position).Magnitude
            if distance < minDistance then
                minDistance = distance
                nearestCrystal = v
            end
        end
    end
    return nearestCrystal
end

-- Function to teleport to crystal
local function teleportToCrystal(crystal)
    if crystal and LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
        local targetCFrame = CFrame.new(crystal.Position + Vector3.new(0, 3, 0))
        local tween = TweenService:Create(
            LP.Character.HumanoidRootPart,
            TweenInfo.new(1, Enum.EasingStyle.Linear),
            {CFrame = targetCFrame}
        )
        tween:Play()
    end
end

-- Button to teleport to nearest crystal
CrystalSection:AddButton({
    Name = "Teleport to Nearest Crystal",
    Callback = function()
        local crystal = findNearestCrystal()
        if crystal then
            teleportToCrystal(crystal)
        end
    end
})

-- Toggle for auto crystal collection
CrystalSection:AddToggle({
    Name = "Auto Collect Crystals",
    Default = false,
    Callback = function(Value)
        Config.AutoCrystalTP = Value
        if Value then
            task.spawn(function()
                while Config.AutoCrystalTP do
                    local crystal = findNearestCrystal()
                    if crystal then
                        teleportToCrystal(crystal)
                        task.wait(0.5)
                        if RS and RS:FindFirstChild("Events") then
                            RS.Events.CollectGem:FireServer(2)
                            RS.Events.CollectGem:FireServer(3)
                            RS.Events.CollectGem:FireServer(6)
                        end
                    end
                    task.wait(1)
                end
            end)
        end
    end
})

-- Mining Tab
local MiningTab = Window:MakeTab({
    Name = "Mining",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MiningSection = MiningTab:AddSection({
    Name = "Mining Features"
})

-- Auto Mine Toggle
MiningSection:AddToggle({
    Name = "Auto Mine",
    Default = false,
    Callback = function(Value)
        Config.AutoMine = Value
        if Value then
            task.spawn(function()
                while Config.AutoMine do
                    -- Fire mining remote
                    if RS:FindFirstChild("Events") and RS.Events:FindFirstChild("Mine") then
                        RS.Events.Mine:FireServer()
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
})

-- Teleport Tab
local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TeleportSection = TeleportTab:AddSection({
    Name = "Locations"
})

-- Function to teleport with tween
local function tweenToPosition(position)
    if LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
        local targetCFrame = typeof(position) == "CFrame" and position or CFrame.new(position)
        local tween = TweenService:Create(
            LP.Character.HumanoidRootPart,
            TweenInfo.new(1, Enum.EasingStyle.Linear),
            {CFrame = targetCFrame}
        )
        tween:Play()
    end
end

-- Add teleport locations
local locations = {
    ["Spawn"] = Vector3.new(0, 5, 0),  -- Update these coordinates
    ["Mining Area"] = Vector3.new(50, 5, 50),
    ["Shop"] = Vector3.new(-50, 5, -50),
    ["Exchange"] = Vector3.new(100, 5, 100)
}

for name, position in pairs(locations) do
    TeleportSection:AddButton({
        Name = "Teleport to " .. name,
        Callback = function()
            tweenToPosition(position)
        end
    })
end

-- Save Location feature
local savedLocations = {}

TeleportSection:AddButton({
    Name = "Save Current Location",
    Callback = function()
        if LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
            local currentPos = LP.Character.HumanoidRootPart.Position
            table.insert(savedLocations, {
                name = "Location " .. #savedLocations + 1,
                position = currentPos
            })
            
            -- Add button for the saved location
            TeleportSection:AddButton({
                Name = "Saved Location " .. #savedLocations,
                Callback = function()
                    tweenToPosition(currentPos)
                end
            })
            
            OrionLib:MakeNotification({
                Name = "Location Saved",
                Content = "Current position has been saved!",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

-- Initialize
OrionLib:Init()

-- Anti-AFK
LP.Idled:Connect(function()
    VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)

-- Cleanup on script end
game:GetService("CoreGui").ChildRemoved:Connect(function(child)
    if child.Name == "OrionLib" then
        Config.AutoCollectEnabled = false
        Config.AutoCrystalTP = false
        Config.AutoMine = false
        OrionLib:Destroy()
    end
end)
