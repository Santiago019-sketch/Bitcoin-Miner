-- Cleanup existing GUI
if game:GetService("CoreGui"):FindFirstChild("OrionLib") then
    game:GetService("CoreGui"):FindFirstChild("OrionLib"):Destroy()
end

-- Services
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local RS = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer

-- Config
local Config = {
    AutoCollectEnabled = false,
    CollectDelay = 0.1,
    AutoExchangeBTC = false,
    AutoExchangeSolaris = false,
    ExchangeDelay = 0.1
}

-- Create Window
local Window = OrionLib:MakeWindow({
    Name = "Crypto Miner Hub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CryptoMinerConfig"
})

-- Mining Tab
local MiningTab = Window:MakeTab({
    Name = "Mining",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Crystal Collection Section
local CrystalSection = MiningTab:AddSection({
    Name = "Crystal Collection"
})

CrystalSection:AddButton({
    Name = "Collect All Crystals",
    Callback = function()
        local crystalTypes = {2, 3, 6}
        for _, crystalId in ipairs(crystalTypes) do
            if RS and RS:FindFirstChild("Events") then
                RS.Events.CollectGem:FireServer(crystalId)
                task.wait(Config.CollectDelay)
            end
        end
    end
})

CrystalSection:AddToggle({
    Name = "Auto Collect",
    Default = false,
    Callback = function(Value)
        Config.AutoCollectEnabled = Value
        while Config.AutoCollectEnabled do
            local crystalTypes = {2, 3, 6}
            for _, crystalId in ipairs(crystalTypes) do
                if not Config.AutoCollectEnabled then break end
                if RS and RS:FindFirstChild("Events") then
                    RS.Events.CollectGem:FireServer(crystalId)
                    task.wait(Config.CollectDelay)
                end
            end
            task.wait(0.5)
        end
    end
})

CrystalSection:AddSlider({
    Name = "Collection Delay",
    Min = 0.1,
    Max = 1,
    Default = 0.1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "seconds",
    Callback = function(Value)
        Config.CollectDelay = Value
    end    
})

-- Exchange Tab
local ExchangeTab = Window:MakeTab({
    Name = "Exchange",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local ExchangeSection = ExchangeTab:AddSection({
    Name = "Currency Exchange"
})

-- Bitcoin Exchange
ExchangeSection:AddButton({
    Name = "Exchange Bitcoin",
    Callback = function()
        if RS and RS:FindFirstChild("Events") then
            RS.Events.ExchangeMoney:FireServer(true)
        end
    end
})

ExchangeSection:AddToggle({
    Name = "Auto Exchange Bitcoin",
    Default = false,
    Callback = function(Value)
        Config.AutoExchangeBTC = Value
        while Config.AutoExchangeBTC do
            if RS and RS:FindFirstChild("Events") then
                RS.Events.ExchangeMoney:FireServer(true)
                task.wait(Config.ExchangeDelay)
            end
        end
    end
})

-- Solaris Exchange
ExchangeSection:AddButton({
    Name = "Exchange Solaris",
    Callback = function()
        if RS and RS:FindFirstChild("Events") then
            RS.Events.ExchangeMoney:FireServer(false)
        end
    end
})

ExchangeSection:AddToggle({
    Name = "Auto Exchange Solaris",
    Default = false,
    Callback = function(Value)
        Config.AutoExchangeSolaris = Value
        while Config.AutoExchangeSolaris do
            if RS and RS:FindFirstChild("Events") then
                RS.Events.ExchangeMoney:FireServer(false)
                task.wait(Config.ExchangeDelay)
            end
        end
    end
})

ExchangeSection:AddSlider({
    Name = "Exchange Delay",
    Min = 0.1,
    Max = 1,
    Default = 0.1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "seconds",
    Callback = function(Value)
        Config.ExchangeDelay = Value
    end    
})

-- Algorithm Tab
local AlgoTab = Window:MakeTab({
    Name = "Algorithm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local AlgoSection = AlgoTab:AddSection({
    Name = "Mining Algorithm"
})

AlgoSection:AddDropdown({
    Name = "Select Algorithm",
    Default = "Algorithm 1",
    Options = {"Algorithm 1", "Algorithm 2", "Algorithm 3", "Algorithm 4"},
    Callback = function(Value)
        local algoMap = {
            ["Algorithm 1"] = 1,
            ["Algorithm 2"] = 2,
            ["Algorithm 3"] = 3,
            ["Algorithm 4"] = 4
        }
        if RS and RS:FindFirstChild("Events") then
            RS.Events.AlgoChang:FireServer(algoMap[Value])
        end
    end    
})

-- Player Tab
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local PlayerSection = PlayerTab:AddSection({
    Name = "Local Player"
})

PlayerSection:AddSlider({
    Name = "Walk Speed",
    Min = 16,
    Max = 100,
    Default = 16,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "speed",
    Callback = function(Value)
        if LP.Character and LP.Character:FindFirstChild("Humanoid") then
            LP.Character.Humanoid.WalkSpeed = Value
        end
    end    
})

-- Initialize
OrionLib:Init()

-- Character Added Handler
LP.CharacterAdded:Connect(function(char)
    local humanoid = char:WaitForChild("Humanoid")
    if Config.WalkSpeed then
        humanoid.WalkSpeed = Config.WalkSpeed
    end
end)

-- Cleanup on script end
game:GetService("CoreGui").ChildRemoved:Connect(function(child)
    if child.Name == "OrionLib" then
        Config.AutoCollectEnabled = false
        Config.AutoExchangeBTC = false
        Config.AutoExchangeSolaris = false
        OrionLib:Destroy()
    end
end)
