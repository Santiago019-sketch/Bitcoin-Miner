-- Cleanup existing GUI
if game:GetService("CoreGui"):FindFirstChild("CryptoMiner") then
    game:GetService("CoreGui"):FindFirstChild("CryptoMiner"):Destroy()
end

-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Crypto Miner Hub", "Ocean")

-- Services
local RS = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer

-- Variables
local AutoFarmEnabled = false
local AutoCollectEnabled = false
local CollectDelay = 0.1
local ExchangeDelay = 0.1

-- Main Mining Tab
local MiningTab = Window:NewTab("Mining")
local CrystalSection = MiningTab:NewSection("Crystal Collection")

-- Crystal Collection Functions
CrystalSection:NewButton("Collect All Crystals", "Collects all available crystals", function()
    -- Collect all types of crystals
    local crystalTypes = {2, 3, 6}
    for _, crystalId in ipairs(crystalTypes) do
        RS.Events.CollectGem:FireServer(crystalId)
        task.wait(0.1)
    end
end)

CrystalSection:NewToggle("Auto Collect Crystals", "Automatically collects crystals", function(state)
    AutoCollectEnabled = state
    while AutoCollectEnabled do
        -- Auto collect all crystal types
        local crystalTypes = {2, 3, 6}
        for _, crystalId in ipairs(crystalTypes) do
            RS.Events.CollectGem:FireServer(crystalId)
            task.wait(CollectDelay)
        end
        task.wait(0.5) -- Wait before next collection cycle
    end
end)

CrystalSection:NewSlider("Collection Delay", "Adjust collection speed", 1, 0.1, function(v)
    CollectDelay = v
end)

-- Exchange Tab
local ExchangeTab = Window:NewTab("Exchange")
local ExchangeSection = ExchangeSection:NewSection("Currency Exchange")

-- Bitcoin Exchange
ExchangeSection:NewButton("Exchange Bitcoin", "Exchanges Bitcoin once", function()
    RS.Events.ExchangeMoney:FireServer(true)
end)

ExchangeSection:NewToggle("Auto Exchange Bitcoin", "Automatically exchanges Bitcoin", function(state)
    _G.AutoBitcoin = state
    while _G.AutoBitcoin do
        RS.Events.ExchangeMoney:FireServer(true)
        task.wait(ExchangeDelay)
    end
end)

-- Solaris Exchange
ExchangeSection:NewButton("Exchange Solaris", "Exchanges Solaris once", function()
    RS.Events.ExchangeMoney:FireServer(false)
end)

ExchangeSection:NewToggle("Auto Exchange Solaris", "Automatically exchanges Solaris", function(state)
    _G.AutoSolaris = state
    while _G.AutoSolaris do
        RS.Events.ExchangeMoney:FireServer(false)
        task.wait(ExchangeDelay)
    end
end)

ExchangeSection:NewSlider("Exchange Delay", "Adjust exchange speed", 1, 0.1, function(v)
    ExchangeDelay = v
end)

-- Algorithm Tab
local AlgoTab = Window:NewTab("Algorithm")
local AlgoSection = AlgoTab:NewSection("Mining Algorithm")

AlgoSection:NewDropdown("Select Algorithm", "Choose mining algorithm", {"Algorithm 1", "Algorithm 2", "Algorithm 3", "Algorithm 4"}, function(value)
    local algoMap = {
        ["Algorithm 1"] = 1,
        ["Algorithm 2"] = 2,
        ["Algorithm 3"] = 3,
        ["Algorithm 4"] = 4
    }
    RS.Events.AlgoChang:FireServer(algoMap[value])
end)

-- Player Tab
local PlayerTab = Window:NewTab("Player")
local PlayerSection = PlayerTab:NewSection("Local Player")

PlayerSection:NewSlider("Walk Speed", "Changes your walk speed", 100, 16, function(v)
    if LP.Character and LP.Character:FindFirstChild("Humanoid") then
        LP.Character.Humanoid.WalkSpeed = v
    end
end)

-- Protection
local mt = getrawmetatable(game)
setreadonly(mt, false)
local old = mt.__namecall
mt.__namecall = newcclosure(function(...)
    local args = {...}
    if getnamecallmethod() == "Kick" then
        return
    end
    return old(...)
end)
setreadonly(mt, true)

-- UI Toggle
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        Library:ToggleUI()
    end
end)

-- Notification
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Script Loaded",
    Text = "Press Right-Shift to toggle GUI",
    Duration = 5
})

-- Handle Character Respawn
LP.CharacterAdded:Connect(function(char)
    local humanoid = char:WaitForChild("Humanoid")
    if _G.WalkSpeedValue then
        humanoid.WalkSpeed = _G.WalkSpeedValue
    end
end)
