-- Remove existing GUI
if game:GetService("CoreGui"):FindFirstChild("BCMX") then
    game:GetService("CoreGui"):FindFirstChild("BCMX"):Destroy()
end

-- Load Rayfield UI Library (more stable)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "BCMX - Midnight Hub",
    LoadingTitle = "Loading BCMX...",
    LoadingSubtitle = "by Midnight Hub",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "BCMX",
        FileName = "Config"
    }
})

-- Services
local RS = game:GetService("ReplicatedStorage")
local LP = game:GetService("Players").LocalPlayer

-- Variables
local BitcoinMultiplier = 50
local SolarisMultiplier = 50

-- Tabs
local MainTab = Window:CreateTab("Main", 4483345998)
local PlotTab = Window:CreateTab("Plot", 4483345998)

-- Bitcoin Exchange Function (Updated with correct remote)
local function SellBitcoin()
    for i = 1, BitcoinMultiplier do
        RS.Events.ExchangeMoney:FireServer(true)
        task.wait(0.1) -- Small delay to prevent overflow
    end
end

-- Solaris Exchange Function
local function SellSolaris()
    for i = 1, SolarisMultiplier do
        RS.Events.ExchangeMoney:FireServer(false)
        task.wait(0.1) -- Small delay to prevent overflow
    end
end

-- Main Tab Elements
MainTab:CreateSection("Auto Exchange")

MainTab:CreateSlider({
    Name = "Bitcoin Multiplier",
    Range = {1, 1000},
    Increment = 1,
    Suffix = "x",
    CurrentValue = 50,
    Flag = "BitcoinMultiplier",
    Callback = function(Value)
        BitcoinMultiplier = Value
    end,
})

MainTab:CreateButton({
    Name = "Exchange Bitcoin",
    Callback = function()
        SellBitcoin()
    end,
})

MainTab:CreateSlider({
    Name = "Solaris Multiplier",
    Range = {1, 1000},
    Increment = 1,
    Suffix = "x",
    CurrentValue = 50,
    Flag = "SolarisMultiplier",
    Callback = function(Value)
        SolarisMultiplier = Value
    end,
})

MainTab:CreateButton({
    Name = "Exchange Solaris",
    Callback = function()
        SellSolaris()
    end,
})

-- Auto Farm Section
MainTab:CreateSection("Auto Farm")

local autoFarmEnabled = false
MainTab:CreateToggle({
    Name = "Auto Exchange Bitcoin",
    CurrentValue = false,
    Flag = "AutoFarmBitcoin",
    Callback = function(Value)
        autoFarmEnabled = Value
        while autoFarmEnabled do
            SellBitcoin()
            task.wait(1) -- Wait 1 second between cycles
        end
    end,
})

-- Player Section
MainTab:CreateSection("Player")

MainTab:CreateSlider({
    Name = "Walk Speed",
    Range = {16, 100},
    Increment = 1,
    Suffix = "speed",
    CurrentValue = 16,
    Flag = "WalkSpeed",
    Callback = function(Value)
        if LP.Character and LP.Character:FindFirstChild("Humanoid") then
            LP.Character.Humanoid.WalkSpeed = Value
        end
    end,
})

MainTab:CreateButton({
    Name = "Remove Level Barriers",
    Callback = function()
        for _, v in pairs(game.Workspace:GetChildren()) do
            for _, child in pairs(v:GetChildren()) do
                if child:FindFirstChildOfClass("TouchTransmitter") and child:FindFirstChildOfClass("SurfaceGui") then
                    child:Destroy()
                end
            end
        end
    end,
})

-- Plot Tab
local ShelfNames = {
    ["Table"] = true,
    ["Double Shelf"] = true,
    ["Triple Shelf"] = true,
    ["Server Shelf"] = true
}

-- Add shelf toggles
PlotTab:CreateSection("Shelf Management")

for shelfName, _ in pairs(ShelfNames) do
    PlotTab:CreateToggle({
        Name = shelfName,
        CurrentValue = true,
        Flag = "Shelf_" .. shelfName,
        Callback = function(Value)
            ShelfNames[shelfName] = Value
        end,
    })
end

-- Card Management
PlotTab:CreateSection("Card Management")

local cardCount = 1
PlotTab:CreateSlider({
    Name = "Card Amount",
    Range = {1, 100},
    Increment = 1,
    Suffix = "cards",
    CurrentValue = 1,
    Flag = "CardAmount",
    Callback = function(Value)
        cardCount = Value
    end,
})

-- Notification on load
Rayfield:Notify({
    Title = "Script Loaded",
    Content = "BCMX is ready to use",
    Duration = 3,
})

-- Set keybind to toggle UI
local function SetupKeybind()
    game:GetService("UserInputService").InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.RightControl then
            Rayfield:ToggleUI()
        end
    end)
end

pcall(SetupKeybind)
